// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RenegadeSeeker.Data.EF;

#nullable disable

namespace RenegadeSeeker.Data.Migrations
{
    [DbContext(typeof(Db))]
    [Migration("20220429105505_INIT")]
    partial class INIT
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RenegadeSeeker.Data.EF.Types.Token", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(42)
                        .HasColumnType("character varying(42)");

                    b.Property<long>("ChainId")
                        .HasColumnType("bigint");

                    b.Property<short>("Decimals")
                        .HasColumnType("smallint");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)");

                    b.Property<string>("TransactionHash")
                        .IsRequired()
                        .HasMaxLength(66)
                        .HasColumnType("character varying(66)");

                    b.HasKey("Id");

                    b.ToTable("Tokens");
                });

            modelBuilder.Entity("RenegadeSeeker.Data.EF.Types.Transfer", b =>
                {
                    b.Property<long>("ChainId")
                        .HasColumnType("bigint");

                    b.Property<string>("TransactionHash")
                        .HasMaxLength(66)
                        .HasColumnType("character varying(66)");

                    b.Property<long>("LogIndex")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("Amount")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("From")
                        .IsRequired()
                        .HasMaxLength(42)
                        .HasColumnType("character varying(42)");

                    b.Property<long>("Height")
                        .HasColumnType("bigint");

                    b.Property<string>("To")
                        .IsRequired()
                        .HasMaxLength(42)
                        .HasColumnType("character varying(42)");

                    b.Property<long>("TokenId")
                        .HasColumnType("bigint");

                    b.HasKey("ChainId", "TransactionHash", "LogIndex");

                    b.HasIndex("TokenId");

                    b.ToTable("Transfers");
                });

            modelBuilder.Entity("RenegadeSeeker.Data.EF.Types.Transfer", b =>
                {
                    b.HasOne("RenegadeSeeker.Data.EF.Types.Token", null)
                        .WithMany()
                        .HasForeignKey("TokenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
